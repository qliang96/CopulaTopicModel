function [ Eta_d ] = SampleBoundedNPN(mu,Sigma,NPNEta,Lower,Upper)
%sample one doc's Eta_d from the NPN, with bound lower-upper on Eta_d
%1: transfer the bound in Eta_d, to the Gaussian's \phi^{-1}F(\eta) space
%2: use rejection sampling to sample from the bounded Gaussian
    %use the mean as max, if mutiple times still rejected, then just sample
    %from uniform for now (the lower part of Gaussian is rather flat).
    %Should be OK
%3: transfer back to sampled Gaussian to Eta_d

GLower = zeros(size(Lower));
GUpper = zeros(size(Upper));

%transfer bound
for i=1:size(GLower,1)
    GLower(i) = norminv(TruncECdf(NPNEta(:,i),Lower(i)));
    GUpper(i) = norminv(TruncECdf(NPNEta(:,i),Upper(i)));     

end

%rejection sampling the Gaussnian \times I(A)
MaxV = mvnpdf(mu,mu,Sigma);   
%using the maximum of normal for now. A better upper bound is to calculate
%the maximum of mvnpdf in the bound, but it is too costy (solve a quadratic
%programing).
SampleRound = 1000;
for ite=1:SampleRound
    X = unifrnd(GLower,GUpper);
    y = unifrnd(0,MaxV);
    if y < mvnpdf(X,mu,Sigma)
        fprintf('get sample in [%d] round\n',i);
        break
    end
end

for i=1:size(
Eta_d = TruncInvECdf(normcdf(X));


